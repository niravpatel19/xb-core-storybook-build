import{j as d}from"./jsx-runtime-CLpGMVip.js";import{c,t as g}from"./i18next-8U-VCFEF.js";import{c as y,a as v,I as h,F as f}from"./index-BH7J9u6C.js";class w{static validate(n,a,r){return!a||!a.length||a.map(s=>n.getFieldValue(s)).every(s=>s===r)?Promise.resolve():Promise.reject(new Error("The fields do not match!"))}}const I=({option:e,callBack:n})=>{const a=y.useFormInstance(),{name:r,placeholder:i,disabled:o,readOnly:s,className:t,label:l}=e,m=c("h-10 px-3 -mt-1",t==null?void 0:t.control),u=[...e.validation,{validator(P,p){return w.validate(a,e==null?void 0:e.dependencies,p)}}];return d.jsx(v,{option:{...e,validation:u},children:d.jsx(h.Password,{className:m,placeholder:g(i||l),disabled:o,readOnly:s,onChange:()=>n==null?void 0:n({type:f.FIELD_CHANGE,data:{name:r,value:a.getFieldValue(r)}})})})};I.__docgenInfo={description:`Password component

@remarks
This component renders a password input field within a form, utilizing Ant Design's Input.Password component.
It handles input changes by triggering a callback function with the updated value.`,methods:[],displayName:"Password",props:{callBack:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: ICallBackEvent) => void",signature:{arguments:[{type:{name:"ICallBackEvent"},name:"event"}],return:{name:"void"}}},description:""},option:{required:!0,tsType:{name:"IBaseField"},description:""},getValueProps:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: any) => any",signature:{arguments:[{type:{name:"any"},name:"value"}],return:{name:"any"}}},description:""},dependencies:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""}},composes:["PropsWithChildren"]};export{I as P};
